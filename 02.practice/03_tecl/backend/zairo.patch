diff -Naur nginx-1.19.1-origin/src/http/ngx_http_request.c nginx-1.19.1/src/http/ngx_http_request.c
--- nginx-1.19.1-origin/src/http/ngx_http_request.c	2020-07-07 15:56:06.000000000 +0000
+++ nginx-1.19.1/src/http/ngx_http_request.c	2020-07-19 10:31:52.193156776 +0000
@@ -1931,6 +1931,10 @@
         return NGX_ERROR;
     }
 
+	/* 
+		[zairo patch]
+		- Transfer Encoding 보다 Content-Length를 우선시 하도록 수정
+	*/
     if (r->headers_in.content_length) {
         r->headers_in.content_length_n =
                             ngx_atoof(r->headers_in.content_length->value.data,
@@ -1942,6 +1946,22 @@
             ngx_http_finalize_request(r, NGX_HTTP_BAD_REQUEST);
             return NGX_ERROR;
         }
+    }else if (r->headers_in.transfer_encoding) {
+        if (r->headers_in.transfer_encoding->value.len == 7
+            && ngx_strncasecmp(r->headers_in.transfer_encoding->value.data,
+                               (u_char *) "chunked", 7) == 0)
+        {
+            r->headers_in.content_length = NULL;
+            r->headers_in.content_length_n = -1;
+            r->headers_in.chunked = 1;
+
+        } else {
+            ngx_log_error(NGX_LOG_INFO, r->connection->log, 0,
+                          "client sent unknown \"Transfer-Encoding\": \"%V\"",
+                          &r->headers_in.transfer_encoding->value);
+            ngx_http_finalize_request(r, NGX_HTTP_NOT_IMPLEMENTED);
+            return NGX_ERROR;
+        }
     }
 
     if (r->method == NGX_HTTP_TRACE) {
@@ -1950,7 +1970,7 @@
         ngx_http_finalize_request(r, NGX_HTTP_NOT_ALLOWED);
         return NGX_ERROR;
     }
-
+	/*
     if (r->headers_in.transfer_encoding) {
         if (r->headers_in.transfer_encoding->value.len == 7
             && ngx_strncasecmp(r->headers_in.transfer_encoding->value.data,
@@ -1968,6 +1988,7 @@
             return NGX_ERROR;
         }
     }
+	*/
 
     if (r->headers_in.connection_type == NGX_HTTP_CONNECTION_KEEP_ALIVE) {
         if (r->headers_in.keep_alive) {
